package ${baseServicePackage};

import com.github.pagehelper.PageHelper;
import com.github.pagehelper.PageInfo;
import org.springframework.transaction.annotation.Transactional;

import java.util.ArrayList;
import java.util.List;
import java.util.Map;

/**
 * @author Zhongl
 * @date 2020/05/24 12:42
 */
@Transactional
public abstract class BaseService<T,K> implements IService<T,K> {
    @Override
    public void save(T t) {
        getMapper().insert(t);
    }

    @Override
    public void batchSave(List<T> list) {
        getMapper().batchInsert(list);
    }

    @Override
    public int delete(K k) {
        return getMapper().deleteByKey(k);
    }

    @Override
    public int batchDelete(List<K> list) {
        return getMapper().deleteByKeys(list);
    }

    @Override
    public int update(T t) {
        return getMapper().updateByKey(t);
    }

    @Override
    public List<T> find(T t) {
        return getMapper().select(t);
    }

    @Override
    public T findByKey(K k) {
        return getMapper().selectByKey(k);
    }

    @Override
    public List<T> findByMap(Map<String, Object> map) {
        return getMapper().selectByMap(map);
    }

    @Override
    public int count(T t) {
        return getMapper().count(t);
    }

    @Override
    public int countByMap(Map<String, Object> map) {
        return getMapper().countByMap(map);
    }

    @Override
    public PageInfo<T> findPage(int pageNum, int pageSize) {
        return findPage(pageNum, pageSize, null);
    }

    @Override
    public PageInfo<T> findPage(int pageNum, int pageSize, T entity) {
        PageHelper.startPage(pageNum, pageSize);
        List<T> result = this.getMapper().select(entity);
        return new PageInfo<>(result == null ? new ArrayList<T>() : result);
    }

    @Override
    public PageInfo<T> findPageByMap(int pageNum, int pageSize, Map<String, Object> map) {
        PageHelper.startPage(pageNum, pageSize);
        List<T> result = this.getMapper().selectByMap(map);
        return new PageInfo<>(result == null ? new ArrayList<T>() : result);
    }
}
